#include<stdio.h>
#include<stdlib.h>     // account number--> 0 to 100
#include<time.h>
#include<string.h>
#include<unistd.h>
#include<ctype.h>
#include<conio.h>


int person=0;
int b,d,j=0,a=0;


int choice;
int select;


int updatechoice;
int verifyaccountnum;
int updateaccountnum;
char names[30];
int ccountnumber;
int total_balance=0;


int dip_amt;
int with_amt;
int trans_amt;
int ac;
int count;


char renpassword[30];
char entpassword[30];
char oldpassword[30];


void divider();
void bank();
void entermenu();
void create();
void login();
void update();
void mainmenu();
void deposit_money();
void withdraw_money();
void transfer_money();
void account_details();
void transaction_details();
void personaldetails();
void last_details();





struct user
{
    char name[30],surname[30];
    int dobdate,dobmonth,dobyear,age;
    char phonenumber[30];
    char address[100];
    char aadhar[12],pan[10];
    char acc_type[1];
    char password[30];
    int bankdep;
    int useraccountnum;
    int counting;
}users[101];





void main()
{
    bank();
}





void bank()
{
    while(1)
    {
        entermenu();
        choisy:
        printf("\n\nPlease enter your choice:-");
        scanf("%d",&choice);

        if(choice==1)
        {
            create();
        }

        else if(choice==2)
        {
            login();

        }

        else if(choice==3)
        {
            update();
        }

        else
        {
            printf("\nError!!!.Enter the appropriate choice number.");
            goto choisy;
        }
    }
}





void divider()
{
    for(int d=0;d<50;d++)
    {
        printf("-");
    }
}





void entermenu()
{
     printf("\n\n");
     divider();
     printf("\n\tWELCOME TO NITTE BANKING SYSTEM\n");

     divider();
     printf("\n1.Create an account");
     printf("\n2.Login to your account");
     printf("\n3.Update bank account information");
}





void create()
{

    printf("\nCreate account\n");
    divider();

    printf("\nEnter your name:-");
    scanf("%s",&users[j].name);

    printf("\nEnter your surname:-");
    scanf("%s",&users[j].surname);

    printf("\nEnter date of birth:-\n");
    printf("Date: ");
    scanf("%d",&users[j].dobdate);
    printf("Month: ");
    scanf("%d",&users[j].dobmonth);
    printf("Year: ");
    scanf("%d",&users[j].dobyear);


    printf("\nEnter your phonenumber:-");
    scanf("%s",&users[j].phonenumber);

    printf("\nEnter your address:-");
    scanf("%s",&users[j].address);

    printf("\nEnter your aadhar number:-");
    scanf("%s",&users[j].aadhar);

    printf("\nEnter your pan number:-");
    scanf("%s",&users[j].pan);

    printf("\nAccount type (Select 1 for savings and 2 for current): ");
    scanf("%s",&users[j].acc_type);


    printf("\nCreate a password");
    passy:
    passyy:
    printf("\nPlease note size of the password must be exactly of 5 characters. Use only aphanumeric characters!!");
    printf("\nEnter the password:-");
    scanf("%s",&users[j].password);              //password generation
    if(strlen(users[j].password)!=5)
    {
        goto passyy;
    }
    printf("\nRenter the password:-");
    scanf("%s",&renpassword);

    if(strcmp(users[j].password,renpassword)==0)
    {
        printf("\nPassword successfully created!!!\n");
    }
    else
    {
        printf("\nError!!! Retry");
        goto passy;
    }

    label:
    printf("\nInitial bank deposition:-");
    printf("\nPlease note a minimum of Rs500 or above must be deposited in the bank account:-");
    printf("\nPlease enter the amount:-");
    scanf("%d",&users[j].bankdep);
    if(users[j].bankdep<500)
    {
        goto label;
    }

    printf("\nAccount created successfully!!!");
    users[j].useraccountnum = a;
    printf("\nAccount number alloted is:- %d\n\n",a);
    a++;
    j++;
    person++;
    users[j].counting = 0;
}







void login()
{

     verify:
     per:

     printf("\nEnter your account number:- ");
     scanf("%d",&verifyaccountnum);
     if(verifyaccountnum<0||verifyaccountnum>100)
     {
         goto verify;
     }

     b = verifyaccountnum;

     if(b>=person)
     {
         printf("\nAccount is not yet created. ");
         goto per;
     }


     bonk:
     printf("\nEnter the password:-");
     scanf("%s",&entpassword);
     if(strcmp(users[b].password,entpassword)==0)
     {

        strcpy(names,users[b].name);
        ccountnumber = users[b].useraccountnum;
        total_balance = users[b].bankdep;


        while(1)
        {
          mainmenu();
          printf("\nSelect your choice:-");
          scanf("%d",&select);
          switch(select)
                {
                    case 1:
                        deposit_money();
                        break;

                    case 2:
                        withdraw_money();
                        break;

                    case 3:
                        transfer_money();
                        break;

                    case 4:
                        account_details();
                        break;

                    case 5:
                        transaction_details();
                        break;

                    case 6:
                        personaldetails();
                        break;

                    case 7:
                        last_details();


                    default:
                        printf("*****INVALID CHOICE*****");
                        break;
                }
        }
     }

     else
     {
         printf("\nError!!! Enter the correct password.");
         goto bonk;
     }
}







void update()
{
     printf("\nUPDATE BANK DEATAILS\n");
     divider();
     verified:
     peryap:

     printf("\nEnter your account number:- ");
     scanf("%d",&updateaccountnum);
     if(updateaccountnum<0||updateaccountnum>100)
     {
         goto verified;
     }

     d = updateaccountnum;

     if(d>=person)
     {
         printf("\nAccount is not yet created. ");
         goto peryap;
     }


     donkit:
     printf("\nEnter the password:-");
     scanf("%s",&entpassword);
     if(strcmp(users[d].password,entpassword)==0)
     {
             printf("\nSelect the appropriate term which is to updated by entering a correct number from (1 to 8)\n");
             printf("Select 9 to exit\n\n");

             printf("\n1.Name\n");
             printf("2.Surname\n");
             printf("3.Date of birth\n");
             printf("4.Phone number\n");
             printf("5.Address\n");
             printf("6.Aadhar number\n");
             printf("7.Pan number\n");
             printf("8.Password\n");
             printf("9.Exit\n");

             liberal:
             printf("\nEnter your choice:-");
             scanf("%d",&updatechoice);

             switch(updatechoice)
             {
                    case 1:
                        printf("\nEnter the name:");
                        scanf("%s",&users[d].name);
                        printf("\nUpdated successfully!!!!");
                        break;

                    case 2:
                        printf("\nEnter the surname:");
                        scanf("%s",&users[d].surname);
                        printf("\nUpdated successfully!!!!");
                        break;

                    case 3:
                         printf("\nEnter date of birth:-\n");
                         printf("Date: ");
                         scanf("%d",&users[d].dobdate);
                         printf("Month: ");
                         scanf("%d",&users[d].dobmonth);
                         printf("Year: ");
                         scanf("%d",&users[d].dobyear);
                         printf("\nUpdated successfully!!!!");
                         break;

                    case 4:
                         printf("\nEnter your phonenumber:-");
                         scanf("%s",&users[d].phonenumber);
                         printf("\nUpdated successfully!!!!");
                         break;


                    case 5:
                        printf("\nEnter your address:-");
                        scanf("%s",&users[d].address);
                        printf("\nUpdated successfully!!!!");
                        break;


                    case 6:
                        printf("\nEnter your aadhar number:-");
                        scanf("%s",&users[d].aadhar);
                        printf("\nUpdated successfully!!!!");
                        break;


                    case 7:
                        printf("\nEnter your pan number:-");
                        scanf("%s",&users[d].pan);
                        printf("\nUpdated successfully!!!!");
                        break;

                    case 8:
                        liberty:
                        printf("\nEnter the old password");
                        scanf("%s",&oldpassword);
                        if(strcmp(users[d].password,oldpassword)==0)
                        {
                            passyyur:
                            printf("\nPlease note size of the password must be exactly of 5 characters. Use only aphanumeric characters!!");
                            printf("\nEnter the new password:-");
                            scanf("%s",&users[d].password);
                            if(strlen(users[d].password)!=5)
                            {
                                goto passyyur;
                            }
                            printf("\nPassword updated successfully!!!!");
                        }
                        else
                        {
                            printf("\nError!!! Please enter the correct old password");
                            goto liberty;
                        }
                        break;


                    case 9:
                        break;

                    default:
                        printf("\n****INVALID CHOICE****");
                        goto liberal;

             }
     }

     else
     {
         printf("\nError!!! Enter the correct password.");
         goto donkit;
     }
}







void mainmenu()
{
    printf("\n\n");
    divider();
    printf("\n\tMENU\n");

    divider();
    printf("\n1.Deposit Money\n");
    printf("2.Withdraw Money\n");
    printf("3.Transfer Money\n");
    printf("4.Account details\n");
    printf("5.Transaction details\n");
    printf("6.Personal details\n");
    printf("7.Exit\n");
    divider();
}







void deposit_money()
{
    time_t tm;        //this is used to display current date and time in transaction details function
    time(&tm);
    FILE *fp = fopen("Account.txt","a");    //all the transaction details will be stored in this file
    printf("\n\n*****DEPOSITING MONEY*****\n");
    divider();

    bankor:
    printf("\nEnter your password:-");
    scanf("%s",&entpassword);

    if(strcmp(entpassword,users[ccountnumber].password)==0)
    {
        dip:
        printf("\nEnter the amount to be deposited:- ");
        scanf("%d",&dip_amt);
        if(dip_amt<=0)
        {
            printf("\n Error!!! Renter");
            goto dip;
        }

        total_balance += dip_amt;
        printf("*****MONEY DEPOSITED*****\n");
        printf("Current balance : %d\n",total_balance);
        fprintf(fp,"\nRs%d had been deposited to the account number %d\n",dip_amt,ccountnumber);
        fprintf(fp,"Date /time of transaction : %s\n",ctime(&tm));
        count++;
        users[ccountnumber].counting++;

        fclose(fp);
        printf("Press any key.....\n");
        getch();
    }

    else
    {
         printf("\nError!!! Enter the correct password");
         goto bankor;
    }
}







void withdraw_money()
{
    time_t tm;
    time(&tm);
    FILE *fp = fopen("Account.txt","a");
    printf("\n\n*****WITHDRAWING MONEY*****\n");
    divider();

    bankory:
    printf("\nEnter your password:-");
    scanf("%s",&entpassword);

    if(strcmp(entpassword,users[ccountnumber].password)==0)
   {
        label:
        with:
        printf("\nEnter the amount you want to withdraw:- ");
        scanf("%d",&with_amt);
        if(with_amt<0)
        {
            printf("\nError!!! Renter");
            goto with;
        }

        if((total_balance-with_amt)<500)
        {
            printf("*****Transaction Declined*****\n (A minimum of Rs500 must be kept in the bank)\n");
            goto label;
        }

        else
        {
            total_balance = total_balance - with_amt;
            printf("*****Money withdrawn*****\n");
            printf("Current balance : %d\n",total_balance);
            fprintf(fp,"\nRs%d had been withdrawn from the account number %d\n",with_amt,ccountnumber);
            fprintf(fp,"Date /time of transaction : %s\n",ctime(&tm));
            count++;
            users[ccountnumber].counting++;
        }

        fclose(fp);
        printf("Press any key....\n");
        getch();
   }

   else
   {
         printf("\nError!!! Enter the correct password");
         goto bankory;
   }
}






void transfer_money()
{
    time_t tm;
    time(&tm);
    FILE *fp = fopen("Account.txt","a");
    printf("\n\n*****TRANSFER MONEY*****\n");
    divider();

    bankoring:
    printf("\nEnter your password:-");
    scanf("%s",&entpassword);

    if(strcmp(entpassword,users[ccountnumber].password)==0)
    {
        invalid:
        creation:
        printf("\nEnter the account no. in which money has to be transferred:- ");
        scanf("%d",&ac);
        if(ac<0||ac>100)
        {
            printf("Invalid account number!! Renter");
            goto invalid;
        }

        if(ac>=person)
        {
            printf("\nAccount is not yet created. ");
            goto creation;
        }


        if(ac!=ccountnumber)
        {
        transfering:
        trans:
        printf("\nEnter the amount you want to transfer:- ");
        scanf("%d",&trans_amt);
        if(trans_amt<=0)
        {
            printf("\nError!!! Renter");
            goto trans;
        }

        if((total_balance-trans_amt)<500)
        {
            printf("*****Transaction Declined*****\n (Please maintain atleast Rs 500 in bank account)");
            goto transfering;
        }

        else
        {
            users[ac].bankdep = users[ac].bankdep + trans_amt;
            total_balance = total_balance-trans_amt;
            printf("*****Money Transferred*****\n");
            printf("Current balance : %d\n",total_balance);
            fprintf(fp,"\nRs%d had been transferred from the account number %d to account number %d\n",trans_amt,ccountnumber,ac);
            fprintf(fp,"Date /time of transaction : %s\n",ctime(&tm));
            count++;
            users[ccountnumber].counting++;
        }

        fclose(fp);
        printf("Press any key....\n");
        getch();
        }

        else if(ac==ccountnumber)                     //self transferring
        {

                training:
                train:
                printf("\nEnter the amount you want to transfer:- ");
                scanf("%d",&trans_amt);
                if(trans_amt<=0)
                {
                    printf("\nError!!! Renter");
                    goto train;
                }

                if((total_balance-trans_amt)<500)
                {
                    printf("*****Transaction Declined*****\n (Please maintain atleast Rs 500 in bank account)");
                    goto training;
                }

                else
                {
                    total_balance = total_balance-0;
                    printf("\nSelf transferring case\n");
                    printf("*****Money Transferred*****\n");
                    printf("Current balance : %d\n",total_balance);
                    fprintf(fp,"\nSelf transferreing case of Rs%d by the account number %d\n",trans_amt,ccountnumber);
                    fprintf(fp,"Date /time of transaction : %s\n",ctime(&tm));
                    count++;
                    users[ccountnumber].counting++;
                }

                fclose(fp);
                printf("Press any key....\n");
                getch();
        }
    }

    else
    {
        printf("\nError!!! Enter the correct password");
        goto bankoring;
    }
}








void transaction_details()
{
    FILE *fp;
    fp = fopen("Account.txt","r");
    char c = fgetc(fp);
    if(c==EOF)                  //when no text is present in the file Account.txt
    {
        printf("\n\nTRANSACTION DETAILS\n");
        divider();
        printf("\n*****NO RECENT TRANSACTION*****\n");
    }

    else
    {
        printf("\n\nTRANSACTION DETAILS\n");
        divider();
        printf("\n%d Transactions have been made in the system so far.\n",count);
        printf("\n%d Transactions have been made by the account number %d so far.\n",users[ccountnumber].counting,ccountnumber);
        while(c!=EOF)
        {
            printf("%c",c);
            c = fgetc(fp);
        }
    }

    printf("\nPress any key......\n");
    getch();
}







void personaldetails()
{
     printf("\n\nPERSONAL DETAILS\n");
     divider();
     printf("\nAccount number: %d\n",users[ccountnumber].useraccountnum);
     printf("1.Name: %s\n",users[ccountnumber].name);
     printf("2.Surname: %s\n",users[ccountnumber].surname);
     printf("3.Date of birth:- %d.%d.%d\n",users[ccountnumber].dobdate,users[ccountnumber].dobmonth,users[ccountnumber].dobyear);
     printf("4.Phone number: %s\n",users[ccountnumber].phonenumber);
     printf("5.Address: %s\n",users[ccountnumber].address);
     printf("6.Aadhar number: %s\n",users[ccountnumber].aadhar);
     printf("7.Pan number: %s\n",users[ccountnumber].pan);
     printf("Press any key....\n");
     getch();
}







void account_details()
{
    printf("\n\nACCOUNT DETAILS\n");
    divider();

    printf("\nName : %s\n",names);
    printf("Account No. : %d\n",ccountnumber);
    printf("Total balance = %d\n",total_balance);
    printf("\n%d Transactions have been made by the account number %d so far.\n",users[ccountnumber].counting,ccountnumber);
    printf("\n%d Transactions have been made in the system so far.\n",count);
    printf("Press any key....");
    getch();
}





void last_details()
{
    users[ccountnumber].bankdep = total_balance;
    bank();
}
